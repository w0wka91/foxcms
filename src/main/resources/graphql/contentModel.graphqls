extend type Query {
    contentModel(modelId: ID!): ContentModel
}

input AddScalarFieldInput {
    modelId: ID!
    fieldName: String!
    apiName: String!
    displayType: DisplayType!
    concern: Concern!
    constraint: Constraint!
}

input AddListFieldInput {
    modelId: ID!
    fieldName: String!
    apiName: String!
    displayType: DisplayType!
}

input AddRelationInput {
    modelId: ID!
    fieldName: String!
    apiName: String!
    relatesToModelId: ID!
    relatesToFieldName: String!
    relatesToApiName: String!
    relationType: RelationType!
}

type DeleteFieldPayload {
    modelId: ID!
    fieldId: ID!
}

type AddRelationFieldPayload {
    modelId: ID!
    field: RelationField!
}

extend type Mutation {
    addContentModel(input: AddContentModelInput!): ContentModel!
    addScalarField(input: AddScalarFieldInput!): ScalarField!
    addListField(input: AddListFieldInput!): ListField!
    addRelationField(input: AddRelationInput!): [AddRelationFieldPayload!]!
    deleteField(modelId: ID!, id: ID!): [DeleteFieldPayload!]!
    reorderField(modelId: ID!, from: Int!, to: Int!): ContentModel
}